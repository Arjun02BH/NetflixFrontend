name: Netflix Frontend Deployment

on:
  push:
    branches:
      - main

env:
  EC2_PUBLIC_IP_1: 18.199.191.210  # Instance 1 Public IP
  EC2_PUBLIC_IP_2: 3.126.246.114   # Instance 2 Public IP
  EC2_PUBLIC_IP_3: 35.159.60.165   # Instance 3 Public IP
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}  # Define the SSH private key in GitHub Secrets
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}        # GitHub Access Token for login

jobs:
  Deploy-Frontend:
    name: Deploy Frontend to EC2 Instances
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 1: Set up Docker
      - name: Set up Docker
        run: |
          echo "Updating package list..."
          sudo apt-get update
          echo "Installing necessary dependencies..."
          sudo apt-get install -y ca-certificates curl gnupg lsb-release || { echo "Failed to install dependencies. Exiting."; exit 1; }
          
          echo "Adding Docker's official GPG key..."
          sudo mkdir -p /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo tee /etc/apt/keyrings/docker.asc > /dev/null
          sudo chmod a+r /etc/apt/keyrings/docker.asc
          
          echo "Adding Docker repository..."
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

          echo "Updating package index again..."
          sudo apt-get update || { echo "Failed to update package index. Exiting."; exit 1; }

          echo "Installing Docker and Docker Compose..."
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin || { echo "Failed to install Docker. Exiting."; exit 1; }

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

      # Step 3: Build Docker image
      - name: Build Docker image
        run: |
          echo "Building the Docker image..."
          docker build -t arjun02bh/netflixfrontend:v0.0.2 .

      # Step 4: Push Docker image
      - name: Push Docker image
        run: |
          echo "Pushing the Docker image..."
          docker push arjun02bh/netflixfrontend:v0.0.2

      # Step 5: SSH to the EC2 instances and deploy the frontend
      - name: Deploy to EC2 Instance 1
        run: |
          echo "$SSH_PRIVATE_KEY" > aws_key.pem
          chmod 600 aws_key.pem
          ssh -o StrictHostKeyChecking=no -i aws_key.pem ec2-user@$EC2_PUBLIC_IP_1 "sudo docker run -d -p 80:3000 arjun02bh/netflixfrontend:v0.0.2"

      - name: Deploy to EC2 Instance 2
        run: |
          ssh -o StrictHostKeyChecking=no -i aws_key.pem ec2-user@$EC2_PUBLIC_IP_2 "sudo docker run -d -p 80:3000 arjun02bh/netflixfrontend:v0.0.2"

      - name: Deploy to EC2 Instance 3
        run: |
          ssh -o StrictHostKeyChecking=no -i aws_key.pem ec2-user@$EC2_PUBLIC_IP_3 "sudo docker run -d -p 80:3000 arjun02bh/netflixfrontend:v0.0.2"
